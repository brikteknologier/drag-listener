// Generated by CoffeeScript 1.6.2
(function() {
  var EventEmitter;

  EventEmitter = require('events').EventEmitter;

  module.exports = function(parent, handle, offsetMin, offsetMax) {
    var emitter, page;

    if (typeof handle !== 'object') {
      offsetMax = offsetMin;
      offsetMin = handle;
      handle = parent;
    }
    handle = $(handle);
    parent = $(parent);
    page = $('body');
    emitter = new EventEmitter();
    handle.on('mousedown', function(downEvent) {
      var complete, drag, handleStartX, max, min;

      emitter.emit('dragStart');
      handleStartX = parent.position().left;
      min = typeof offsetMin === 'function' ? offsetMin() : offsetMin;
      max = typeof offsetMax === 'function' ? offsetMax() : offsetMax;
      downEvent.preventDefault();
      drag = function(dragEvent) {
        var currentX, offsetX, potentialX;

        offsetX = dragEvent.pageX - downEvent.pageX;
        currentX = parent.position().left;
        potentialX = handleStartX + offsetX;
        if (min > potentialX) {
          if (currentX === min) {
            return;
          }
          potentialX = min;
        } else if (max < potentialX) {
          if (currentX === max) {
            return;
          }
          potentialX = max;
        }
        return emitter.emit('drag', (potentialX - min) / (max - min));
      };
      complete = function() {
        page.off('mousemove', drag);
        page.off('mouseup', complete);
        return emitter.emit('dragFinish');
      };
      page.on('mousemove', drag);
      return page.on('mouseup', complete);
    });
    return emitter;
  };

}).call(this);
